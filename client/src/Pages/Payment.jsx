import React, { useContext, useEffect, useState } from "react";
import axios from "axios";
import { AuthContext } from "../Context/AuthContextProvider";
import { useNavigate } from "react-router-dom";

const Payment = () => {
  const [totalAmount, setTotalAmount] = useState(0);
  const { loginStatus } = useContext(AuthContext);
  const navigate = useNavigate();
  const [cartItems, setCartItems] = useState([]);
  const apiKey = import.meta.env.VITE_API_KEY;

  useEffect(() => {
    const fetchCartItems = async () => {
      try {
        const response = await axios.get(
          "https://boat-lifestyle-server.onrender.com/api/carts/products",
          {
            headers: {
              "Content-Type": "application/json",
              Authorization: `Bearer ${loginStatus.token}`,
            },
          }
        );
        const cartItems = response.data;
        setCartItems(cartItems);
        const total = cartItems.reduce((sum, item) => sum + item.price, 0);
        setTotalAmount(total);
      } catch (error) {
        console.error("Error fetching cart items:", error);
      }
    };

    fetchCartItems();
  }, []);

  const handlePayment = async () => {
    try {
      const orderResponse = await axios.post(
        "https://boat-lifestyle-server.onrender.com/api/payment/order",
        {
          amount: totalAmount, // Amount in INR
          currency: "INR",
        },
        {
          headers: {
            "Content-Type": "application/json",
            Authorization: `Bearer ${loginStatus.token}`,
          },
        }
      );

      const { amount, id: order_id, currency } = orderResponse.data;

      if (window.Razorpay) {
        const options = {
          key: apiKey, // Your Razorpay key ID
          amount, // Amount to be paid (in the smallest currency unit, e.g., paise for INR)
          currency, // Currency code (e.g., "INR")
          name: "Boat Lifestyle", // Name to be displayed on the payment interface
          description: "Test Transaction", // Description of the transaction
          order_id, // The order ID generated by Razorpay
          handler: async function (response) {
            // Function to handle the response after payment
            alert(
              `Payment successful! Payment ID: ${response.razorpay_payment_id}`
            );
            // Save order details
            await axios.post(
              "https://boat-lifestyle-server.onrender.com/api/orders",
              {
                products: cartItems,
                totalAmount,
                order_id, // Include order_id
              },
              {
                headers: {
                  "Content-Type": "application/json",
                  Authorization: `Bearer ${loginStatus.token}`,
                },
              }
            );
            // Delete products from cart
            await axios.delete(
              "https://boat-lifestyle-server.onrender.com/api/carts",
              {
                headers: {
                  "Content-Type": "application/json",
                  Authorization: `Bearer ${loginStatus.token}`,
                },
              }
            );
            // Navigate to order details page
            navigate("/orderdetails", { state: { order_id } });
          },
          prefill: {
            // Prefill details for the user
            name: loginStatus.userName, // User's name
            email: "test.user@example.com", // User's email
            contact: "9999999999", // User's contact number
          },
          notes: {
            // Additional notes
            address: "Test Address",
          },
          theme: {
            // Theme customization
            color: "#3399cc", // Color of the payment interface
          },
        };

        const rzp1 = new window.Razorpay(options);
        rzp1.open();
      } else {
        console.error("Razorpay SDK not loaded");
      }
    } catch (error) {
      console.error("Error creating order:", error);
    }
  };

  return (
    <div className="mt-48 max-w-md mx-auto bg-white rounded-lg shadow-lg p-8 text-center">
      <h2 className="text-2xl font-bold text-gray-800 mb-4">Payment Page</h2>
      <p className="text-lg text-gray-600 mb-6">
        Total Amount:{" "}
        <span className="font-semibold text-gray-900">â‚¹{totalAmount}</span>
      </p>
      <button
        onClick={handlePayment}
        className="w-full py-3 px-6 bg-blue-600 hover:bg-blue-700 text-white font-medium rounded-md transition duration-300 shadow-md hover:shadow-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-opacity-50"
      >
        Pay Now
      </button>
    </div>
  );
};

export default Payment;
